//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "DatabaseUnit.h"
#include "isbnservice.h"
#include "IsbnUnit.h"
#include "ImyWebServiceWSDL.h"
#include "QuoteThreadUnit.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "frxClass"
#pragma link "frxDBSet"
#pragma link "frxExportBaseDialog"
#pragma link "frxExportPDF"
#pragma resource "*.dfm"
TdbForm *dbForm;
HINSTANCE myFlags;

void translateForm(TForm* Form, String Language, const std::map<String, std::map<String, String>>& translation){
	for(int i = 0; i < Form->ComponentCount; i++)
		for(auto it_ComponentName = translation.begin(); it_ComponentName != translation.end(); it_ComponentName++)
			if(Form->Components[i]->Name == it_ComponentName->first)
			   for(auto it_Language = it_ComponentName->second.begin(); it_Language != it_ComponentName->second.end(); it_Language++)
				   if(it_Language->first == Language)
					  if(IsPublishedProp(Form->Components[i], "Caption"))
						 SetPropValue(Form->Components[i], "Caption", it_Language->second);
}
//---------------------------------------------------------------------------
__fastcall TdbForm::TdbForm(TComponent* Owner)
	: TForm(Owner)
{
  myFlags = LoadLibraryA("flags.dll");
  if(!myFlags) {
	  ShowMessage("flags.dll is missing");
	  return;
  }
  imageDb->Picture->Bitmap->LoadFromResourceName((unsigned)myFlags, "HR");
  FreeLibrary(myFlags);

  translation["searchButton"] = {
	 {
		  {"EN", "Searcha By Name"},
		  {"HR", "Pretrazi po imenu"}
	 }
  };
  translation["authorSearchButton"] = {
	 {
		  {"EN", "Search by Author Name/Surname"},
		  {"HR", "Pretrazi po autorovom imenu i prezimenu"}
	 }
  };
  translation["GroupBox1"] = {
	 {
		  {"EN", "Edit Book Info:"},
		  {"HR", "Uredi informacije knjige:"}
	 }
  };
  translation["GroupBox2"] = {
	 {
		  {"EN", "Edit Author Info:"},
		  {"HR", "Uredi informacije o autoru:"}
	 }
  };
  translation["calcAgeButton"] = {
	 {
		  {"EN", "Calculate age:"},
		  {"HR", "Izracunaj godine:"}
	 }
  };
  translation["sortButton"] = {
	 {
		  {"EN", "Sort by rating:"},
		  {"HR", "Sortiraj po ocjenama:"}
	 }
  };
  translation["sortButtonPageNum"] = {
	 {
		  {"EN", "Sort By Page Number:"},
		  {"HR", "Sortiraj po stranicama:"}
	 }
  };
  translation["autorNameLabel"] = {
	 {
		  {"EN", "Name:"},
		  {"HR", "Ime:"}
	 }
  };
  translation["autorSurnameLabel"] = {
	 {
		  {"EN", "Surname:"},
		  {"HR", "Prezime:"}
	 }
  };
  translation["birthYearLabel"] = {
	 {
		  {"EN", "Birth year:"},
		  {"HR", "Godina roð.:"}
	 }
  };
  translation["ratingBox"] = {
	 {
		  {"EN", "Rating"},
		  {"HR", "Ocjena"}
	 }
  };
  translation["seeDataButton"] = {
	 {
		  {"EN", "See Data"},
		  {"HR", "Pregled zapisa"}
	 }
  };
  translation["xmlViewOpenButton"] = {
	 {
		  {"EN", "See XML"},
		  {"HR", "Pregled XML-a"}
	 }
  };
  translation["qotdButton"] = {
	 {
		  {"EN", "Quote of the day"},
		  {"HR", "Citat dana"}
	 }
  };
  translation["appBarButton"] = {
	 {
		  {"EN", "Application"},
		  {"HR", "Aplikacija"}
	 }
  };
  translation["DownloadBookly1"] = {
	 {
		  {"EN", "Download Bookly database"},
		  {"HR", "Preuzmi Bookly bazu podataka"}
	 }
  };
  translation["ChangeFont"] = {
	 {
		  {"EN", "Change Font/Size"},
		  {"HR", "Promijeni Font"}
	 }
  };
  translation["Exit1"] = {
	 {
		  {"EN", "Exit"},
		  {"HR", "Izlaz"}
	 }
  };
  translation["SaveasCustom1"] = {
	 {
		  {"EN", "Save as Custom..."},
		  {"HR", "Spremi kao prilagoðen format..."}
	 }
  };
  translation["OpenCustom1"] = {
	 {
		  {"EN", "Open Custom..."},
		  {"HR", "Otvori prilagoðeni format..."}
	 }
  };
}
//---------------------------------------------------------------------------
void __fastcall TdbForm::Button1Click(TObject *Sender)
{
   TBook->Delete();
}
//---------------------------------------------------------------------------
void __fastcall TdbForm::searchButtonClick(TObject *Sender)
{
	TLocateOptions SearchOptions;
	SearchOptions.Clear();
	SearchOptions << loPartialKey;

	if(TBook->Locate("bookName", nameSearch->Text, SearchOptions))
	{

	}
	else {
    ShowMessage("Not Found!");
	}
}
//---------------------------------------------------------------------------




void __fastcall TdbForm::authorSearchButtonClick(TObject *Sender)
{
	TLocateOptions SearchOptions;
    SearchOptions.Clear();
    SearchOptions << loPartialKey;

    if(TBook->Locate("authorName", authorSearch->Text, SearchOptions))
    {
       // works
    }
    else {
         if(TBook->Locate("authorSurname", authorSearch->Text, SearchOptions))
    {
         // works
    }
    else {
       ShowMessage("Doesnt exist...")  ;
    }
    }
}
//---------------------------------------------------------------------------

void __fastcall TdbForm::sortButtonClick(TObject *Sender)
{
   TBook->IndexFieldNames = "rating DESC";
}
//---------------------------------------------------------------------------

void __fastcall TdbForm::sortButtonPageNumClick(TObject *Sender)
{
   TBook->IndexFieldNames = "pageNum DESC";
}
//---------------------------------------------------------------------------

void __fastcall TdbForm::filterGenreButtonClick(TObject *Sender)
{


	TBook->Filtered = false;
	TBook->Filter = "Genre LIKE " + QuotedStr(genreFilterField->Text);

	TBook->Filtered = true;
}
//---------------------------------------------------------------------------



void __fastcall TdbForm::checkISBNClick(TObject *Sender)
{

	 _di_ISBNServiceSoapType isbnValidate = GetISBNServiceSoapType();


	 if(isbnValidate->IsValidISBN13(isbnField->Text) == 1){
		ShowMessage("Valid ISBN");
	 }
	 else {
		 ShowMessage("Invalid ISBN");
	 }
}
//---------------------------------------------------------------------------


void __fastcall TdbForm::openIsbnFormButtonClick(TObject *Sender)
{
    isbnForm->Show();
}
//---------------------------------------------------------------------------

void __fastcall TdbForm::calcAgeButtonClick(TObject *Sender)
{
    _di_ImyWebService webService = GetImyWebService();
   ageField->Text = webService->ageCalc(birthyearField->Text.ToInt());

}
//---------------------------------------------------------------------------

void __fastcall TdbForm::imageDbClick(TObject *Sender)
{

   translateForm(this, "HR", translation);
}
//---------------------------------------------------------------------------


